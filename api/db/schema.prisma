generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Refugee {
  id          Int           @id @default(autoincrement())
  email       String?
  phone       String?
  firstName   String
  lastName    String
  photo       String
  sex         Sex
  tentId      Int?
  createdAt   DateTime      @default(now())
  dateOfBirth DateTime      @default(now())
  code        String?       @default("codexx")
  country     String?       @default("counryxx")
  Tent        Tent?         @relation(fields: [tentId], references: [id])
  Transaction Transaction[]
}

model Tent {
  id        Int       @id @default(autoincrement())
  code      String
  sectionId Int?
  Section   Section?  @relation(fields: [sectionId], references: [id])
  refugees  Refugee[]
}

model Section {
  id          Int           @id @default(autoincrement())
  code        String
  adminId     Int           @unique
  admin       User          @relation(fields: [adminId], references: [id])
  tens        Tent[]
  Transaction Transaction[]
}

model User {
  id                  Int           @id @default(autoincrement())
  username            String        @unique(map: "User_email_key")
  phone               String        @unique
  firstName           String
  lastName            String
  photo               String
  role                Role          @default(SECTION_ADMIN)
  hashedPassword      String
  salt                String
  resetToken          String?
  resetTokenExpiresAt DateTime?
  accountBalance      Float         @default(0)
  email               String        @unique(map: "User_username_key")
  section             Section?
  Transaction         Transaction[]
}

model Transaction {
  id              Int             @id @default(autoincrement())
  amount          Int
  transactionType TransactionType
  createdAt       DateTime        @default(now())
  adminId         Int?
  sectionId       Int?
  refugeeId       Int?
  ref             String          @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  donor           String          @default("")
  admin           User?           @relation(fields: [adminId], references: [id])
  refugee         Refugee?        @relation(fields: [refugeeId], references: [id])
  Section         Section?        @relation(fields: [sectionId], references: [id])
}

enum Sex {
  MALE
  FEMALE
}

enum Role {
  CAMP_ADMIN
  SECTION_ADMIN
}

enum TransactionType {
  ADMIN_TO_SECTION
  ADMIN_TO_INDIVIDUAL
  DONATION
}
